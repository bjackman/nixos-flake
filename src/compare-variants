#!/usr/bin/env bash
#
# Wrapper for 'falba compare with some ASI-benchmarking specific defaults.
#
# Usage:
#     compare-variants [options]
#     compare-variants --help
#
# Options:
#     -h --help              Show this screen.
#     --config-revision REV  NixOS configuration revision to compare variants
#                            of. This is a Git commit hash. If not specified,
#                            uses HEAD from CWD. Unlike if you were using falba
#                            directly, this doesn't need to be a full commit
#                            hash.
#     --instrumented         Compare instrumented runs instead of ignoring them.
#     --metric METRIC        Metric to compare [default: fio_randread_tmpfs_read_iops].
#     --test TEST            Forwarded to Falba CLI's --test arg.
#     --hist-width WIDTH     Forwarded to Falba-CLI

set -eu -o pipefail

source docopts.sh --auto -G "$@"

if [ -z "$ARGS_config_revision" ]; then
    if ! [ -z "$(git status --porcelain)" ]; then
        echo "Git tree is dirty, --config-revision must be specified"
        exit 1
    fi
    CONFIG_REVISION="$(git rev-parse HEAD)"
else
    CONFIG_REVISION="$(git rev-parse "$ARGS_config_revision")"
fi

if "$ARGS_instrumented"; then
    INSTRUMENTED_CMP="= true"
else
    # The parser only ever sets the value to true, instead of false we get NULL.
    INSTRUMENTED_CMP="IS NULL"
fi

extra_filter=
if [ -n "$ARGS_test" ]; then
    extra_filter="AND test_name = '$ARGS_test'"
fi

declare -a extra_args
if [ -n "$ARGS_hist_width" ]; then
    extra_args+=("--hist-width" "$ARGS_hist_width")
fi

# nixos_system is fully derivative of the other facts so we ignore that.
# (This is a workaround for a silly Falba limitation, it should be able to
# detect that it doesn't matter).

falba cmp --filter "\
        instrumented $INSTRUMENTED_CMP AND \
        nixos_config_rev = '$CONFIG_REVISION'
        $extra_filter" \
    --fact variant --metric "$ARGS_metric" "${extra_args[@]}"