#!/usr/bin/env python3

import argparse
import pathlib

import falba
import falba.model

if __name__ == "__main__":
    parser = argparse.ArgumentParser()
    parser.add_argument("--config-revision", required=True)
    parser.add_argument("--instrumented", action="store_true")
    parser.add_argument("--metric", default="fio_randread_read_iops")
    parser.add_argument("variants", nargs="+")
    args = parser.parse_args()

    db = falba.read_db(pathlib.Path("./results"))

    df = db.flat_df()
    df = df[df["nixos_configuration_revision"] == args.config_revision]

    df = df[df["metric"] == args.metric]
    df = df[df["instrumented"] == args.instrumented]

    missing_variants = set(args.variants) - set(df["os_release_variant_id"])
    if missing_variants:
        print(f"No results for variants {missing_variants}")
    df = df[df["os_release_variant_id"].isin(args.variants)]

    for name, group in df.groupby("os_release_variant_id"):
        gv = group["value"]
        # Note lazy hack to achieve alignment of mean and stddev values
        print(f"{name:<30} mean {args.metric}: {gv.mean():>13.1f}")
        print(f"  ({", ".join(group["result_id"].unique())}) {len(group):>8} samples  stddev {gv.std():>10.1f}")
